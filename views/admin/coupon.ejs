<%- include("../../views/partials/admin/header") %>
<style>
.content-main {
    padding: 30px;
    background-color: #f8f9fa;
}

.content-header {
    margin-bottom: 20px;
}

.content-title {
    color: #2c3e50;
    font-weight: 600;
    font-size: 1.8rem;
    margin-bottom: 10px;
}

.error-message {
    color: red;
    margin-top: 5px;
    display: none;
}

.form-label {
    margin-bottom: 8px;
}

.form-control {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
}

.btn-primary {
    background-color: #007bff;
    color: #fff;
    border: 1px solid #007bff;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background-color: #0056b3;
    border-color: #0056b3;
    transform: translateY(-1px);
}

.add-coupon-container {
    margin-bottom: 20px;
}

.add-coupon-btn {
    padding: 8px 20px;
    background-color: #3498db;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 0.9rem;
    transition: all 0.3s ease;
}

.add-coupon-btn:hover {
    background-color: #2980b9;
    transform: translateY(-1px);
}

.add-coupon-btn i {
    margin-right: 5px;
}
</style>

<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Coupons</h2>
    </div>
    <div class="add-coupon-container">
        <button type="button" class="add-coupon-btn" data-bs-toggle="modal" data-bs-target="#addCouponModal">
            <i class="fas fa-plus"></i> Add New Coupon
        </button>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Coupon Code</th>
                            <th>Type</th>
                            <th>Discount</th>
                            <th>Min Purchase</th>
                            <th>Expiry Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% coupons.forEach(coupon => { %>
                        <tr>
                            <td><%= coupon.name %></td>
                            <td><%= coupon.type === 'percentage' ? 'Percentage' : 'Fixed Amount' %></td>
                            <td><%= coupon.offerPrice %><%= coupon.type === 'percentage' ? '%' : '₹' %></td>
                            <td>₹<%= coupon.minimumPrice %></td>
                            <td><%= new Date(coupon.expireOn).toLocaleDateString() %></td>
                            <td>
                                <% const isActive = new Date() <= new Date(coupon.expireOn) %>
                                <span class="badge bg-<%= isActive ? 'success' : 'danger' %>">
                                    <%= isActive ? 'Active' : 'Expired' %>
                                </span>
                            </td>
                            <td>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-sm btn-outline-primary" onclick="editCoupon('<%= coupon._id %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteCoupon('<%= coupon._id %>')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

<!-- Add Coupon Modal -->
<div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addCouponForm" method="post" action="/admin/createcoupon" onsubmit="return validateForm()">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="coupon-name" class="form-label">Coupon Code</label>
                        <input type="text" id="coupon-name" name="couponName" class="form-control" required />
                        <div id="error-coupon-name" class="error-message"></div>
                    </div>

                    <div class="mb-3">
                        <label for="type" class="form-label">Coupon Type</label>
                        <select id="type" name="type" class="form-control" required>
                            <option value="percentage">Percentage Discount</option>
                            <option value="fixed">Fixed Amount Discount</option>
                        </select>
                        <div id="error-type" class="error-message"></div>
                    </div>

                    <div class="mb-3">
                        <label for="offerPrice" class="form-label">Discount Amount</label>
                        <div class="input-group">
                            <input type="number" id="offerPrice" name="offerPrice" class="form-control" min="0" required />
                            <span class="input-group-text" id="discount-symbol">%</span>
                        </div>
                        <small class="form-text text-muted" id="discount-help">For percentage: 0-100, For fixed amount: any value</small>
                        <div id="error-discount" class="error-message"></div>
                    </div>

                    <div class="mb-3">
                        <label for="minimumPrice" class="form-label">Minimum Purchase Amount</label>
                        <div class="input-group">
                            <span class="input-group-text">₹</span>
                            <input type="number" id="minimumPrice" name="minimumPrice" class="form-control" min="0" required />
                        </div>
                        <div id="error-min-amount" class="error-message"></div>
                    </div>

                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" id="startDate" name="startDate" class="form-control" required />
                        <div id="error-start-date" class="error-message"></div>
                    </div>

                    <div class="mb-3">
                        <label for="endDate" class="form-label">Expiry Date</label>
                        <input type="date" id="endDate" name="endDate" class="form-control" required />
                        <div id="error-end-date" class="error-message"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Coupon</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Update discount symbol based on coupon type
    document.getElementById('type').addEventListener('change', function() {
        const symbol = this.value === 'percentage' ? '%' : '₹';
        document.getElementById('discount-symbol').textContent = symbol;
        
        // Update validation rules
        const offerPriceInput = document.getElementById('offerPrice');
        if (this.value === 'percentage') {
            offerPriceInput.max = "100";
            document.getElementById('discount-help').textContent = 'Enter a value between 0 and 100';
        } else {
            offerPriceInput.removeAttribute('max');
            document.getElementById('discount-help').textContent = 'Enter the fixed discount amount';
        }
    });

    function validateForm() {
        let isValid = true;
        const couponName = document.getElementById('coupon-name').value;
        const type = document.getElementById('type').value;
        const offerPrice = document.getElementById('offerPrice').value;
        const minimumPrice = document.getElementById('minimumPrice').value;
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;

        // Reset error messages
        document.querySelectorAll('.error-message').forEach(el => {
            el.style.display = 'none';
            el.textContent = '';
        });

        // Validate coupon code
        if (!couponName || couponName.trim().length < 3) {
            document.getElementById('error-coupon-name').textContent = 'Coupon code must be at least 3 characters';
            document.getElementById('error-coupon-name').style.display = 'block';
            isValid = false;
        }

        // Validate offer price based on type
        if (type === 'percentage' && (offerPrice < 0 || offerPrice > 100)) {
            document.getElementById('error-discount').textContent = 'Percentage discount must be between 0 and 100';
            document.getElementById('error-discount').style.display = 'block';
            isValid = false;
        } else if (type === 'fixed' && offerPrice < 0) {
            document.getElementById('error-discount').textContent = 'Fixed discount cannot be negative';
            document.getElementById('error-discount').style.display = 'block';
            isValid = false;
        }

        // Validate minimum price
        if (minimumPrice < 0) {
            document.getElementById('error-min-amount').textContent = 'Minimum amount cannot be negative';
            document.getElementById('error-min-amount').style.display = 'block';
            isValid = false;
        }

        // Validate dates
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        const start = new Date(startDate);
        const end = new Date(endDate);

        if (start < today) {
            document.getElementById('error-start-date').textContent = 'Start date cannot be in the past';
            document.getElementById('error-start-date').style.display = 'block';
            isValid = false;
        }

        if (end <= start) {
            document.getElementById('error-end-date').textContent = 'Expiry date must be after start date';
            document.getElementById('error-end-date').style.display = 'block';
            isValid = false;
        }

        return isValid;
    }

    function setDefaultStartDate() {
        const today = new Date();
        const startDateInput = document.getElementById("startDate");
        startDateInput.min = today.toISOString().split("T")[0];
        startDateInput.value = today.toISOString().split("T")[0];
    }

    function editCoupon(couponId) {
        window.location.href = `/admin/editcoupon?id=${couponId}`;
    }

    function deleteCoupon(couponId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/deletecoupon/${couponId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire(
                            'Deleted!',
                            'Coupon has been deleted.',
                            'success'
                        ).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            'Failed to delete coupon.',
                            'error'
                        );
                    }
                });
            }
        });
    }

    // Initialize date inputs when modal opens
    document.getElementById('addCouponModal').addEventListener('show.bs.modal', function (event) {
        setDefaultStartDate();
    });
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<%- include("../../views/partials/admin/footer") %>
