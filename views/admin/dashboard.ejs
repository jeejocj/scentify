<%- include("../../views/partials/admin/header") %>

<style>
    :root {
        --primary-color: #0C977F;
        --primary-light: #e6f4f1;
        --secondary-color: #2c3e50;
        --success-color: #2ecc71;
        --warning-color: #f1c40f;
        --info-color: #3498db;
        --danger-color: #e74c3c;
        --background-color: #f8f9fa;
        --card-shadow: 0 2px 20px rgba(0,0,0,0.08);
        --hover-shadow: 0 10px 30px rgba(0,0,0,0.15);
    }

    .container-fluid {
        background-color: var(--background-color);
        min-height: calc(100vh - 60px);
    }

    .dashboard-card {
        border: none;
        border-radius: 16px;
        box-shadow: var(--card-shadow);
        transition: all 0.3s ease;
        background: white;
        overflow: hidden;
    }

    .dashboard-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--hover-shadow);
    }

    .card-body {
        padding: 1.5rem;
    }

    .stat-icon {
        width: 56px;
        height: 56px;
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
        font-size: 1.5rem;
    }

    .bg-primary-light { background-color: #e6f4f1; }
    .bg-success-light { background-color: #e8f8f0; }
    .bg-warning-light { background-color: #fef7e6; }
    .bg-info-light { background-color: #e7f3fb; }

    .text-primary { color: var(--primary-color) !important; }
    .text-success { color: var(--success-color) !important; }
    .text-warning { color: var(--warning-color) !important; }
    .text-info { color: var(--info-color) !important; }

    .card-title {
        color: #64748b;
        font-size: 0.875rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    h3 {
        color: var(--secondary-color);
        font-weight: 600;
        font-size: 1.75rem;
    }

    .content-header {
        background: transparent;
        padding: 1.5rem 0;
        margin-bottom: 2rem;
        border-radius: 0;
        box-shadow: none;
    }

    .content-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--secondary-color);
        margin: 0;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border: none;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        border-radius: 12px;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0a7d6a;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(12, 151, 127, 0.2);
    }

    .filter-container {
        background: white;
        padding: 1rem;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
        margin-bottom: 1.5rem;
    }

    .form-select {
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        transition: all 0.2s ease;
    }

    .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(12, 151, 127, 0.1);
    }

    .chart-container {
        position: relative;
        height: 300px;
        padding: 1rem;
    }

    .list-group-item {
        border: none;
        padding: 1rem;
        margin-bottom: 0.5rem;
        border-radius: 8px;
        background: #f8fafc;
        transition: all 0.2s ease;
    }

    .list-group-item:hover {
        background: #f1f5f9;
        transform: translateX(5px);
    }

    #salesChart, #topProductsChart, #topCategoriesChart, #topBrandsChart {
        border-radius: 12px;
    }

    @media (max-width: 768px) {
        .container-fluid {
            padding: 1rem;
        }
        
        .dashboard-card {
            margin-bottom: 1rem;
        }
        
        .content-header {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
        }
    }
</style>

<div class="container-fluid p-4">
    <div class="content-header">
        <h2 class="content-title">Dashboard</h2>
        <div>
            <a href="/admin/sales-report" class="btn btn-primary">View Sales Report</a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-primary-light">
                        <i class="fas fa-money-bill text-primary"></i>
                    </div>
                    <h6 class="card-title mb-2">Total Revenue</h6>
                    <h3 class="mb-0">â‚¹<%= typeof totalRevenue !== 'undefined' ? totalRevenue.toLocaleString('en-IN') : '0' %></h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-success-light">
                        <i class="fas fa-shopping-cart text-success"></i>
                    </div>
                    <h6 class="card-title mb-2">Total Orders</h6>
                    <h3 class="mb-0"><%= typeof totalOrders !== 'undefined' ? totalOrders : '0' %></h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-warning-light">
                        <i class="fas fa-users text-warning"></i>
                    </div>
                    <h6 class="card-title mb-2">Total Users</h6>
                    <h3 class="mb-0"><%= typeof totalUsers !== 'undefined' ? totalUsers : '0' %></h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-info-light">
                        <i class="fas fa-box text-info"></i>
                    </div>
                    <h6 class="card-title mb-2">Total Products</h6>
                    <h3 class="mb-0"><%= typeof totalProducts !== 'undefined' ? totalProducts : '0' %></h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Sales Chart -->
    <div class="card dashboard-card mb-4">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h5 class="card-title">Sales Overview</h5>
                <div class="filter-container d-flex gap-3">
                    <select id="chartFilter" class="form-select form-select-sm">
                        <option value="yearly">Yearly</option>
                        <option value="monthly" selected>Monthly</option>
                        <option value="weekly">Weekly</option>
                        <option value="daily">Daily</option>
                    </select>
                    <select id="yearFilter" class="form-select form-select-sm">
                        <!-- Will be populated dynamically -->
                    </select>
                </div>
            </div>
            <div class="chart-container">
                <canvas id="salesChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Top Products, Categories, and Brands -->
    <div class="row">
        <!-- Top Products -->
        <div class="col-lg-4 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <h5 class="card-title mb-4">Top Selling Products</h5>
                    <div class="chart-container mb-3">
                        <canvas id="topProductsChart"></canvas>
                    </div>
                    <div id="topProductsList" class="list-group list-group-flush">
                        <!-- Will be populated dynamically -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Top Categories -->
        <div class="col-lg-4 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <h5 class="card-title mb-4">Top Categories</h5>
                    <div class="chart-container mb-3">
                        <canvas id="topCategoriesChart"></canvas>
                    </div>
                    <div id="topCategoriesList" class="list-group list-group-flush">
                        <!-- Will be populated dynamically -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Top Brands -->
        <div class="col-lg-4 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <h5 class="card-title mb-4">Top Brands</h5>
                    <div class="chart-container mb-3">
                        <canvas id="topBrandsChart"></canvas>
                    </div>
                    <div id="topBrandsList" class="list-group list-group-flush">
                        <!-- Will be populated dynamically -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
let salesChart, topProductsChart, topCategoriesChart, topBrandsChart;

// Chart.js defaults for consistent styling
Chart.defaults.font.family = "'Inter', 'Segoe UI', system-ui, sans-serif";
Chart.defaults.font.size = 12;
Chart.defaults.plugins.legend.labels.usePointStyle = true;
Chart.defaults.plugins.tooltip.padding = 12;
Chart.defaults.plugins.tooltip.cornerRadius = 8;
Chart.defaults.plugins.tooltip.titleFont.size = 14;
Chart.defaults.plugins.tooltip.titleFont.weight = '600';
Chart.defaults.plugins.tooltip.bodyFont.size = 13;
Chart.defaults.elements.point.radius = 4;
Chart.defaults.elements.point.hoverRadius = 6;

// Modern color palette
const chartColors = {
    primary: '#0C977F',
    secondary: '#2c3e50',
    success: '#2ecc71',
    warning: '#f1c40f',
    info: '#3498db',
    danger: '#e74c3c',
    background: '#f8f9fa',
    gridLines: '#e2e8f0',
    text: '#64748b'
};

// Initialize all charts
function initializeCharts() {
    // Sales Chart Configuration
    const salesCtx = document.getElementById('salesChart').getContext('2d');
    const gradientFill = salesCtx.createLinearGradient(0, 0, 0, 300);
    gradientFill.addColorStop(0, 'rgba(12, 151, 127, 0.2)');
    gradientFill.addColorStop(1, 'rgba(12, 151, 127, 0)');

    salesChart = new Chart(salesCtx, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Sales',
                data: [],
                borderColor: chartColors.primary,
                backgroundColor: gradientFill,
                borderWidth: 3,
                tension: 0.4,
                fill: true,
                pointBackgroundColor: '#fff',
                pointBorderColor: chartColors.primary,
                pointBorderWidth: 2,
                pointHoverBackgroundColor: chartColors.primary,
                pointHoverBorderColor: '#fff',
                pointHoverBorderWidth: 2
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    mode: 'index',
                    intersect: false,
                    backgroundColor: 'white',
                    titleColor: chartColors.secondary,
                    bodyColor: chartColors.text,
                    borderColor: chartColors.gridLines,
                    borderWidth: 1,
                    padding: 12,
                    displayColors: false,
                    callbacks: {
                        label: function(context) {
                            return 'â‚¹' + context.parsed.y.toLocaleString('en-IN');
                        }
                    }
                }
            },
            scales: {
                x: {
                    grid: {
                        display: false
                    },
                    ticks: {
                        color: chartColors.text,
                        padding: 10
                    }
                },
                y: {
                    beginAtZero: true,
                    grid: {
                        color: chartColors.gridLines,
                        drawBorder: false
                    },
                    ticks: {
                        color: chartColors.text,
                        padding: 10,
                        callback: function(value) {
                            return 'â‚¹' + value.toLocaleString('en-IN');
                        }
                    }
                }
            },
            interaction: {
                intersect: false,
                mode: 'index'
            }
        }
    });

    // Pie Chart Configuration (for Products, Categories, and Brands)
    const pieChartConfig = {
        type: 'doughnut',
        options: {
            responsive: true,
            maintainAspectRatio: false,
            cutout: '65%',
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 20,
                        color: chartColors.text,
                        usePointStyle: true,
                        pointStyle: 'circle',
                        font: {
                            size: 12
                        }
                    }
                },
                tooltip: {
                    backgroundColor: 'white',
                    titleColor: chartColors.secondary,
                    bodyColor: chartColors.text,
                    borderColor: chartColors.gridLines,
                    borderWidth: 1,
                    padding: 12,
                    displayColors: true,
                    callbacks: {
                        label: function(context) {
                            const label = context.label || '';
                            const value = context.parsed || 0;
                            const total = context.dataset.data.reduce((a, b) => a + b, 0);
                            const percentage = Math.round((value / total) * 100);
                            return `${label}: ${percentage}%`;
                        }
                    }
                }
            },
            elements: {
                arc: {
                    borderWidth: 2,
                    borderColor: '#fff'
                }
            }
        }
    };

    // Initialize pie charts with modern colors
    const pieChartColors = [
        '#0C977F', '#2ecc71', '#3498db', '#f1c40f', '#e74c3c',
        '#9b59b6', '#1abc9c', '#34495e', '#16a085', '#27ae60'
    ];

    // Top Products Chart
    topProductsChart = new Chart(document.getElementById('topProductsChart').getContext('2d'), {
        ...pieChartConfig,
        data: {
            labels: [],
            datasets: [{
                data: [],
                backgroundColor: pieChartColors,
                hoverOffset: 4
            }]
        }
    });

    // Top Categories Chart
    topCategoriesChart = new Chart(document.getElementById('topCategoriesChart').getContext('2d'), {
        ...pieChartConfig,
        data: {
            labels: [],
            datasets: [{
                data: [],
                backgroundColor: pieChartColors,
                hoverOffset: 4
            }]
        }
    });

    // Top Brands Chart
    topBrandsChart = new Chart(document.getElementById('topBrandsChart').getContext('2d'), {
        ...pieChartConfig,
        data: {
            labels: [],
            datasets: [{
                data: [],
                backgroundColor: pieChartColors,
                hoverOffset: 4
            }]
        }
    });
}

// Update charts with new data
async function updateCharts() {
    const chartFilter = document.getElementById('chartFilter').value;
    const yearFilter = document.getElementById('yearFilter').value;

    try {
        // Fetch and update sales data
        const salesResponse = await fetch(`/admin/dashboard/sales-data?filter=${chartFilter}&year=${yearFilter}`);
        const salesData = await salesResponse.json();
        
        salesChart.data.labels = salesData.labels;
        salesChart.data.datasets[0].data = salesData.data;
        salesChart.update();

        // Fetch and update top products
        const productsResponse = await fetch('/admin/dashboard/top-products');
        const productsData = await productsResponse.json();
        updateTopChart(topProductsChart, productsData, 'topProductsList');

        // Fetch and update top categories
        const categoriesResponse = await fetch('/admin/dashboard/top-categories');
        const categoriesData = await categoriesResponse.json();
        updateTopChart(topCategoriesChart, categoriesData, 'topCategoriesList');

        // Fetch and update top brands
        const brandsResponse = await fetch('/admin/dashboard/top-brands');
        const brandsData = await brandsResponse.json();
        updateTopChart(topBrandsChart, brandsData, 'topBrandsList');

    } catch (error) {
        console.error('Error updating charts:', error);
    }
}

// Helper function to update top charts and lists
function updateTopChart(chart, data, listId) {
    if (!data || data.length === 0) {
      
        return;
    }

    // Update chart
    chart.data.labels = data.map(item => item.name || 'Unknown');
    chart.data.datasets[0].data = data.map(item => item.revenue || 0);
    chart.update();

    // Update list with more detailed information
    const list = document.getElementById(listId);
    list.innerHTML = data.map((item, index) => `
        <div class="list-group-item">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <div>
                    <span class="badge bg-primary rounded-pill me-2">#${index + 1}</span>
                    <strong>${item.name || 'Unknown'}</strong>
                </div>
            </div>
            <div class="small text-muted">
                <div class="d-flex justify-content-between">
                    <span>Sales Count:</span>
                    <span>${item.count || 0}</span>
                </div>
                <div class="d-flex justify-content-between">
                    <span>Revenue:</span>
                    <span>â‚¹${(item.revenue || 0).toLocaleString('en-IN')}</span>
                </div>
                ${item.uniqueProductCount ? `
                <div class="d-flex justify-content-between">
                    <span>Unique Products:</span>
                    <span>${item.uniqueProductCount}</span>
                </div>
                ` : ''}
            </div>
        </div>
    `).join('');
}

// Initialize year filter
function initializeYearFilter() {
    const yearFilter = document.getElementById('yearFilter');
    const currentYear = new Date().getFullYear();
    for (let year = currentYear; year >= currentYear - 4; year--) {
        const option = document.createElement('option');
        option.value = year;
        option.textContent = year;
        yearFilter.appendChild(option);
    }
}

// Event listeners
document.addEventListener('DOMContentLoaded', () => {
    initializeCharts();
    initializeYearFilter();
    
    // Add error handling for updateCharts
    updateCharts().catch(error => {
        console.error('Error updating charts:', error);
    });

    // Add filter change listeners
    document.getElementById('chartFilter').addEventListener('change', () => {
        updateCharts().catch(error => {
            console.error('Error updating charts after filter change:', error);
        });
    });
    document.getElementById('yearFilter').addEventListener('change', () => {
        updateCharts().catch(error => {
            console.error('Error updating charts after year change:', error);
        });
    });
});
</script>

<%- include("../../views/partials/admin/footer") %>
