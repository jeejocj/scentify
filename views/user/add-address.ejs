<%- include("../../views/partials/user/header") %>
<style>
    .address-form-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 30px;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    .form-title {
        color: #2d3436;
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 30px;
        text-align: center;
        position: relative;
    }

    .form-title:after {
        content: '';
        display: block;
        width: 50px;
        height: 3px;
        background: #2d3436;
        margin: 10px auto;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-group label {
        font-weight: 500;
        color: #2d3436;
        margin-bottom: 8px;
        display: block;
    }

    .form-control {
        height: 45px;
        border: 1px solid #dfe6e9;
        border-radius: 8px;
        padding: 10px 15px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #2d3436;
        box-shadow: 0 0 0 0.2rem rgba(45, 52, 54, 0.1);
    }

    .error-message {
        color: #e74c3c;
        font-size: 12px;
        margin-top: 5px;
        display: none;
    }

    .form-control.is-invalid {
        border-color: #e74c3c;
    }

    .form-control.is-invalid + .error-message {
        display: block;
    }

    .submit-btn {
        background: #2d3436;
        color: white;
        border: none;
        padding: 12px 30px;
        border-radius: 8px;
        font-weight: 500;
        font-size: 16px;
        transition: all 0.3s ease;
        width: 100%;
        max-width: 200px;
        margin: 20px 10px;
        display: inline-block;
    }

    .submit-btn:hover {
        background: #2d3436;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(45, 52, 54, 0.2);
    }

    .back-btn {
        background: #fff;
        color: #2d3436;
        border: 2px solid #2d3436;
        padding: 12px 30px;
        border-radius: 8px;
        font-weight: 500;
        font-size: 16px;
        transition: all 0.3s ease;
        width: 100%;
        max-width: 200px;
        margin: 20px 10px;
        display: inline-block;
        text-decoration: none;
        text-align: center;
    }

    .back-btn:hover {
        background: #2d3436;
        color: #fff;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(45, 52, 54, 0.2);
    }

    .button-group {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 20px;
        margin-top: 30px;
    }

    @media (max-width: 768px) {
        .button-group {
            flex-direction: column-reverse;
        }
        .submit-btn, .back-btn {
            margin: 10px 0;
        }
    }

    .form-row {
        margin-left: -15px;
        margin-right: -15px;
        display: flex;
        flex-wrap: wrap;
    }

    .form-col {
        padding: 0 15px;
        flex: 1;
        min-width: 250px;
    }

    @media (max-width: 768px) {
        .form-col {
            flex: 100%;
        }
        
        .address-form-container {
            padding: 20px;
            margin: 20px;
        }
    }
</style>

<div class="address-form-container">
    <h2 class="form-title">Create User Address</h2>
    <form id="addressForm" method="POST" action="/addAddress" novalidate>
        <div class="form-row">
            <div class="form-col">
                <div class="form-group">
                    <label for="addressType">Address Type:</label>
                    <select class="form-control" id="addressType" name="addressType">
                        <option value="">Select Address Type</option>
                        <option value="Home">Home</option>
                        <option value="Office">Office</option>
                        <option value="Other">Other</option>
                    </select>
                    <div class="error-message" id="addressTypeError"></div>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control" id="name" name="name" placeholder="Enter your full name">
                    <div class="error-message" id="nameError"></div>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="city">City:</label>
                    <input type="text" class="form-control" id="city" name="city" placeholder="Enter your city">
                    <div class="error-message" id="cityError"></div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-col">
                <div class="form-group">
                    <label for="landMark">Landmark:</label>
                    <input type="text" class="form-control" id="landMark" name="landMark" placeholder="Nearby landmark">
                    <div class="error-message" id="landMarkError"></div>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="state">State:</label>
                    <input type="text" class="form-control" id="state" name="state" placeholder="Enter your state">
                    <div class="error-message" id="stateError"></div>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="pincode">Pincode:</label>
                    <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Enter pincode">
                    <div class="error-message" id="pincodeError"></div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-col">
                <div class="form-group">
                    <label for="phone">Phone:</label>
                    <input type="text" class="form-control" id="phone" name="phone" placeholder="Enter your phone number">
                    <div class="error-message" id="phoneError"></div>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="altPhone">Alternate Phone: <span class="text-danger">*</span></label>
                    <input type="tel" class="form-control" id="altPhone" name="altPhone" maxlength="10" placeholder="Alternate phone number">
                    <div class="error-message" id="altPhoneError"></div>
                </div>
            </div>
        </div>
        <div class="button-group">
            <a href="javascript:history.back()" class="back-btn">
                <i class="fas fa-arrow-left"></i> Back
            </a>
            <button type="submit" id="submitButton" class="submit-btn">Add Address</button>
        </div>
    </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('addressForm');
    const inputs = form.querySelectorAll('input, select');
    
    // Validation patterns
    const patterns = {
        name: /^[A-Za-z\s]{3,50}$/,
        city: /^[A-Za-z\s]{3,50}$/,
        state: /^[A-Za-z\s]{3,50}$/,
        landMark: /^[A-Za-z0-9\s,.-]{3,100}$/,
        phone: /^[0-9]{10}$/,
        altPhone: /^[0-9]{10}$/,
        pincode: /^[0-9]{6}$/,
        addressType: /^[A-Za-z\s]{3,20}$/
    };

    // Error messages
    const errorMessages = {
        addressType: {
            required: 'Address type is required',
            pattern: 'Please enter a valid address type (3-20 characters)'
        },
        name: {
            required: 'Name is required',
            pattern: 'Please enter a valid name (only letters and spaces)'
        },
        city: {
            required: 'City is required',
            pattern: 'Please enter a valid city name (only letters and spaces)'
        },
        landMark: {
            required: 'Landmark is required',
            pattern: 'Please enter a valid landmark (3-100 characters)'
        },
        state: {
            required: 'State is required',
            pattern: 'Please enter a valid state name (only letters and spaces)'
        },
        pincode: {
            required: 'Pincode is required',
            pattern: 'Please enter a valid 6-digit pincode'
        },
        phone: {
            required: 'Phone number is required',
            pattern: 'Please enter a valid 10-digit phone number'
        },
        altPhone: {
            required: 'Alternate phone number is required',
            pattern: 'Please enter a valid 10-digit phone number',
            match: 'Phone and alternate phone numbers should be different'
        }
    };

    function validateInput(input) {
        const field = input.name;
        const value = input.value.trim();
        
        // Clear previous errors
        input.classList.remove('is-invalid');
        const errorElement = document.getElementById(`${field}Error`);
        errorElement.style.display = 'none';
        
        // Required field validation
        if (value === '') {
            input.classList.add('is-invalid');
            errorElement.textContent = errorMessages[field].required;
            errorElement.style.display = 'block';
            return false;
        }
        
        // Pattern validation
        if (patterns[field] && !patterns[field].test(value)) {
            input.classList.add('is-invalid');
            errorElement.textContent = errorMessages[field].pattern;
            errorElement.style.display = 'block';
            return false;
        }
        
        // Check if phone numbers are different
        if (field === 'altPhone') {
            const phoneValue = document.getElementById('phone').value;
            if (value === phoneValue) {
                input.classList.add('is-invalid');
                errorElement.textContent = errorMessages.altPhone.match;
                errorElement.style.display = 'block';
                return false;
            }
        }
        
        return true;
    }

    // Add input event listeners
    inputs.forEach(input => {
        input.addEventListener('input', () => validateInput(input));
        input.addEventListener('blur', () => validateInput(input));
    });

    // Form submission
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        let isValid = true;
        
        inputs.forEach(input => {
            if (!validateInput(input)) {
                isValid = false;
            }
        });

        if (isValid) {
            this.submit();
        }
    });
});
</script>

<%- include("../../views/partials/user/footer") %>
