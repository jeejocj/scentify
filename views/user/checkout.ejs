<%- include("../../views/partials/user/header") %>

<style>
    .checkout__form {
        padding: 40px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    .checkout__form h4 {
        color: #333;
        font-weight: 600;
        border-bottom: 1px solid #e1e1e1;
        padding-bottom: 20px;
        margin-bottom: 25px;
    }

    .checkout__form p {
        column-rule: #666;
        margin-bottom: 20px;
    }

    .checkout__order {
        background: #f5f5f5;
        padding: 30px;
        border-radius: 8px;
    }

    .checkout__order h4 {
        color: #333;
        font-weight: 600;
        border-bottom: 1px solid #e1e1e1;
        padding-bottom: 20px;
        margin-bottom: 20px;
    }

    .checkout__order .checkout__order__products {
        font-size: 16px;
        color: #333;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .checkout__order ul {
        margin-bottom: 25px;
    }

    .checkout__order ul li {
        font-size: 16px;
        color: #444;
        line-height: 40px;
        list-style: none;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .checkout__order .checkout__order__total {
        font-size: 18px;
        color: #333;
        font-weight: 600;
        border-bottom: 1px solid #e1e1e1;
        border-top: 1px solid #e1e1e1;
        padding: 15px 0;
        margin-bottom: 25px;
    }

    .address-card {
        border: 1px solid #ddd;
        padding: 20px;
        margin-bottom: 15px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s;
        position: relative;
        display: flex;
        align-items: flex-start;
        gap: 15px;
    }

    .address-card:hover {
        border-color: #666;
        background-color: #fafafa;
    }

    .address-card.selected {
        border-color: #333;
        background-color: #f8f9fa;
    }

    .address-card input[type="radio"] {
        margin-top: 4px;
        flex-shrink: 0;
    }

    .address-details {
        flex-grow: 1;
        line-height: 1.6;
    }

    .address-details strong {
        display: block;
        margin-bottom: 5px;
        color: #333;
        font-size: 16px;
    }

    .address-details p {
        margin: 0;
        color: #666;
        font-size: 14px;
        line-height: 1.8;
    }

    .contact-info {
        margin-top: 8px;
        padding-top: 8px;
        border-top: 1px dashed #eee;
        font-size: 13px;
        color: #666;
    }

    .contact-info span {
        display: block;
        margin-bottom: 2px;
    }

    .contact-info .alt-phone {
        color: #888;
    }

    .landmark {
        color: #666;
        font-style: italic;
        margin: 4px 0;
    }

    .address-type {
        display: inline-block;
        padding: 3px 10px;
        border-radius: 4px;
        font-size: 11px;
        font-weight: 500;
        text-transform: uppercase;
        background-color: #e3f2fd;
        color: #1976d2;
        margin-bottom: 8px;
        letter-spacing: 0.5px;
    }

    .address-type.home {
        background-color: #e8f5e9;
        color: #2e7d32;
    }

    .address-type.office {
        background-color: #fff3e0;
        color: #ef6c00;
    }

    .address-type.other {
        background-color: #f3e5f5;
        color: #7b1fa2;
    }

    .shipping-addresses {
        margin-bottom: 30px;
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    .address-card {
        border: 1px solid #ddd;
        padding: 20px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s;
        position: relative;
        display: flex;
        align-items: flex-start;
        gap: 15px;
        height: 100%;
        background: #fff;
    }

    .address-card:hover {
        border-color: #666;
        background-color: #fafafa;
        transform: translateY(-2px);
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }

    .address-card.selected {
        border-color: #333;
        background-color: #f8f9fa;
        box-shadow: 0 3px 15px rgba(0,0,0,0.15);
    }

    .shipping-addresses .site-btn {
        grid-column: 1 / -1;
        justify-self: start;
        margin-top: 10px;
    }

    @media (max-width: 768px) {
        .shipping-addresses {
            grid-template-columns: 1fr;
        }
    }

    .payment-method {
        margin-top: 30px;
    }

    .payment-method label {
        display: block;
        margin-bottom: 10px;
    }

    .product-item {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .product-image {
        width: 60px;
        height: 60px;
        margin-right: 15px;
    }

    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 4px;
    }

    .product-details {
        flex-grow: 1;
    }

    .product-name {
        font-weight: 500;
        margin-bottom: 5px;
    }

    .product-price {
        color: #666;
    }

    .coupon-section {
        margin-bottom: 20px;
    }

    .coupon-section .input-group-append {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 0 4px 4px 0;
    }

    .coupon-section .input-group-append button {
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }

    .coupon-section .input-group-append button:hover {
        background-color: #f0f0f0;
    }

    .checkout__order__subtotal {
        font-size: 18px;
        color: #333;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .checkout__order__discount {
        font-size: 18px;
        color: #333;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .checkout__order__total {
        font-size: 22px;
        color: #333;
        font-weight: 600;
        margin-bottom: 20px;
    }

    .discount__content {
        margin-top: 20px;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 4px;
    }

    .discount__content h6 {
        color: #333;
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 15px;
    }

    .discount__content form {
        display: flex;
        gap: 10px;
    }

    .discount__content input {
        flex: 1;
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
    }

    .discount__content .site-btn {
        padding: 8px 20px;
        background: #111111;
        border: none;
        color: #ffffff;
        font-size: 14px;
        font-weight: 500;
        border-radius: 4px;
        cursor: pointer;
    }

    .discount__content .site-btn:hover {
        background: #333333;
    }

    .coupon-message {
        margin-top: 10px;
        font-size: 14px;
    }

    .coupon-message.success {
        color: #28a745;
    }

    .coupon-message.error {
        color: #dc3545;
    }

    .active-coupon {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-top: 10px;
        padding: 8px 12px;
        background: #e8f5e9;
        border-radius: 4px;
    }

    .active-coupon span {
        color: #2e7d32;
        font-size: 14px;
    }

    .active-coupon button {
        background: none;
        border: none;
        color: #d32f2f;
        font-size: 14px;
        cursor: pointer;
        padding: 4px 8px;
    }

    .active-coupon button:hover {
        text-decoration: underline;
    }

    .coupon-form {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }
    
    .coupon-form input {
        flex: 1;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    
    .coupon-message {
        margin-top: 10px;
    }
    
    .active-coupon {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px;
        background: #f8f9fa;
        border-radius: 4px;
        margin-top: 10px;
    }
    
    .checkout__order__discount {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        color: #28a745;
    }

    .available-coupons {
        border-top: 1px solid #eee;
        padding-top: 15px;
    }
    
    .coupon-list {
        max-height: 300px;
        overflow-y: auto;
    }
    
    .coupon-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .coupon-item:hover {
        border-color: #007bff;
        background-color: #f8f9fa;
    }
    
    .coupon-info {
        flex: 1;
    }
    
    .coupon-info p {
        color: #28a745;
        font-weight: 500;
    }
    
    .coupon-info small {
        display: block;
        color: #6c757d;
    }
</style>

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Check Out</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/cart">Shopping Cart</a>
                        <span>Check Out</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Checkout Section Begin -->
<section class="checkout spad">
    <div class="container">
        <div class="checkout__form">
            <div class="row">
                <div class="col-lg-8 col-md-6">
                    <h4>Shipping Details</h4>
                    <div class="shipping-addresses">
                        <% if (addressData && addressData.address && addressData.address.length > 0) { %>
                            <% addressData.address.forEach((addr, index) => { %>
                                <div class="address-card" onclick="selectAddress(this, '<%= addr._id %>')">
                                    <input type="radio" name="address" value="<%= addr._id %>" <%= index === 0 ? 'checked' : '' %>>
                                    <div class="address-details">
                                        <span class="address-type <%= addr.addressType.toLowerCase() %>"><%= addr.addressType %></span>
                                        <strong><%= addr.name %></strong>
                                        <p>
                                            <%= addr.city %><br>
                                            <span class="landmark">Landmark: <%= addr.landMark %></span><br>
                                            <%= addr.state %> - <%= addr.pincode %>
                                        </p>
                                        <div class="contact-info">
                                            <span>Phone: <%= addr.phone %></span>
                                            <span class="alt-phone">Alt. Phone: <%= addr.altPhone %></span>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="no-address">No addresses found. Please add a shipping address.</p>
                        <% } %>
                        <a href="/addAddress" class="site-btn">Add New Address</a>
                    </div>

                    <div class="payment-method">
                        <h4>Payment Method</h4>
                        <label class="payment-option">
                            <input type="radio" name="paymentMethod" value="cashOnDelivery" checked>
                            Cash on Delivery (COD)
                        </label>
                        <label class="payment-option">
                            <input type="radio" name="paymentMethod" value="onlinePayment">
                            Online Payment
                        </label>
                    </div>
                </div>
                <div class="col-lg-4 col-md-6">
                    <div class="checkout__order">
                        <h4>Your Order</h4>
                        <div class="checkout__order__products">Products <span>Total</span></div>
                        <ul>
                            <% products.forEach(item => { %>
                                <li>
                                    <%= item.productName %> (<%= item.quantity %>)
                                    <span>₹<%= parseInt(item.totalPrice).toLocaleString('en-IN') %></span>
                                </li>
                            <% }); %>
                        </ul>

                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="mb-0">Apply Coupon</h5>
                            </div>
                            <div class="card-body">
                                <div class="input-group mb-3">
                                    <input type="text" id="couponCode" class="form-control" placeholder="Enter coupon code">
                                    <button class="btn btn-primary" onclick="applyCoupon()">Apply</button>
                                </div>
                                <div id="couponMessage"></div>
                                
                                <% if (availableCoupons && availableCoupons.length > 0) { %>
                                    <div class="mt-3">
                                        <h6>Available Coupons:</h6>
                                        <div class="coupon-list">
                                            <% availableCoupons.forEach(coupon => { %>
                                                <div class="coupon-item border p-2 mb-2 rounded">
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <strong><%= coupon.name %></strong>
                                                            <br>
                                                            <small>Get ₹<%= coupon.offerPrice %> off</small>
                                                            <br>
                                                            <small>Min purchase: ₹<%= coupon.minimumPrice %></small>
                                                        </div>
                                                        <button class="btn btn-sm btn-outline-primary" 
                                                                onclick="applyCouponDirect('<%= coupon.name %>')">
                                                            Apply
                                                        </button>
                                                    </div>
                                                </div>
                                            <% }); %>
                                        </div>
                                    </div>
                                <% } %>
                            </div>
                        </div>

                        <div class="checkout__order__subtotal">
                            Subtotal <span id="subtotal">₹<%= parseInt(subtotal).toLocaleString('en-IN') %></span>
                        </div>
                        
                        <div id="discountRow" class="checkout__order__discount" style="display: none;">
                            Discount <span id="discountAmount">₹0</span>
                        </div>
                        
                        <div class="checkout__order__total">
                            Total <span id="finalAmount">₹<%= parseInt(finalAmount).toLocaleString('en-IN') %></span>
                        </div>

                        <button type="button" class="site-btn" onclick="placeOrder()">PLACE ORDER</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Checkout Section End -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    // Coupon functionality
    async function applyCoupon() {
        const couponCode = document.getElementById('couponCode').value;
        if (!couponCode.trim()) {
            document.getElementById('couponMessage').innerHTML = 
                '<div class="alert alert-danger">Please enter a coupon code</div>';
            return;
        }

        const subtotalElement = document.getElementById('subtotal');
        const totalAmount = subtotalElement.textContent.replace(/[₹,]/g, '').trim();

        try {
            const response = await fetch('/checkout/apply-coupon', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ 
                    couponCode: couponCode,
                    totalAmount: parseFloat(totalAmount)
                })
            });
            
            const data = await response.json();
            const messageDiv = document.getElementById('couponMessage');
            
            if (data.success) {
                messageDiv.innerHTML = '<div class="alert alert-success">' + data.message + '</div>';
                
                // Remove any existing active coupon
                const existingCoupon = document.querySelector('.active-coupon');
                if (existingCoupon) {
                    existingCoupon.remove();
                }
                
                // Show discount row
                const discountRow = document.getElementById('discountRow');
                discountRow.style.display = 'flex';
                
                // Update discount amount
                const discountAmount = document.getElementById('discountAmount');
                discountAmount.textContent = `-₹${parseFloat(data.discount).toLocaleString('en-IN')}`;
                
                // Update final amount
                const finalAmount = document.getElementById('finalAmount');
                finalAmount.textContent = `₹${parseFloat(data.total).toLocaleString('en-IN')}`;
                
                // Show active coupon section
                const activeCouponHtml = `
                    <div class="active-coupon mt-2">
                        <span>Coupon "${couponCode}" applied</span>
                        <button onclick="removeCoupon()" class="btn btn-sm btn-danger">Remove</button>
                    </div>
                `;
                messageDiv.insertAdjacentHTML('afterend', activeCouponHtml);
            } else {
                messageDiv.innerHTML = '<div class="alert alert-danger">' + data.message + '</div>';
            }
        } catch (error) {
            console.error('Error applying coupon:', error);
            document.getElementById('couponMessage').innerHTML = 
                '<div class="alert alert-danger">Error applying coupon. Please try again.</div>';
        }
    }

    async function removeCoupon() {
        try {
            const subtotalElement = document.getElementById('subtotal');
            const totalAmount = subtotalElement.textContent.replace(/[₹,]/g, '').trim();
            
            const response = await fetch('/checkout/remove-coupon', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ totalAmount: parseFloat(totalAmount) })
            });
            
            const data = await response.json();
            if (data.success) {
                // Reset coupon code input
                document.getElementById('couponCode').value = '';
                
                // Hide discount row
                document.getElementById('discountRow').style.display = 'none';
                
                // Reset final amount to original subtotal
                document.getElementById('finalAmount').textContent = `₹${parseFloat(totalAmount).toLocaleString('en-IN')}`;
                
                // Remove active coupon section
                const activeCoupon = document.querySelector('.active-coupon');
                if (activeCoupon) {
                    activeCoupon.remove();
                }
                
                // Clear any messages
                document.getElementById('couponMessage').innerHTML = '';
            } else {
                document.getElementById('couponMessage').innerHTML = 
                    '<div class="alert alert-danger">' + data.message + '</div>';
            }
        } catch (error) {
            console.error('Error removing coupon:', error);
            document.getElementById('couponMessage').innerHTML = 
                '<div class="alert alert-danger">Error removing coupon. Please try again.</div>';
        }
    }

    function selectCoupon(code) {
        document.getElementById('couponCode').value = code;
    }

    function applyCouponDirect(code) {
        document.getElementById('couponCode').value = code;
        applyCoupon();
    }

    // Add keypress event listener for coupon input
    document.getElementById('couponCode').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            applyCoupon();
        }
    });

    // Payment handling functions
    function handlePayment(orderData) {
        $.ajax({
            url: '/checkout/place-order',
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: JSON.stringify({
                address: orderData.address,
                products: orderData.products,
                subtotal: orderData.subtotal,
                total: orderData.total,
                paymentMethod: 'onlinePayment'
            }),
            success: function(response) {
                if (response.success) {
                    var options = {
                        key: response.key_id,
                        amount: response.amount,
                        currency: response.currency,
                        name: response.name,
                        description: response.description,
                        order_id: response.order_id,
                        prefill: response.prefill,
                        handler: function(payment) {
                            payment.orderId = response.orderId;
                            verifyPayment(payment, response.orderId);
                        },
                        modal: {
                            ondismiss: function() {
                                window.location.href = `/payment-failed?orderId=${response.orderId}`;
                            }
                        },
                        theme: {
                            color: "#3399cc"
                        }
                    };
                    var rzp = new Razorpay(options);
                    rzp.on('payment.failed', function(failureResponse) {
                        console.log('Payment failed:', failureResponse);
                        window.location.href = `/payment-failed?orderId=${response.orderId}&error=${encodeURIComponent(failureResponse.error.description)}`;
                    });
                    rzp.open();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: response.message
                    });
                }
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to process order'
                });
            }
        });
    }

    function verifyPayment(payment, orderId) {
        $.ajax({
            url: '/checkout/verify-payment',
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: JSON.stringify({
                razorpay_payment_id: payment.razorpay_payment_id,
                razorpay_order_id: payment.razorpay_order_id,
                razorpay_signature: payment.razorpay_signature,
                orderId: orderId
            }),
            success: function(response) {
                if (response.success) {
                    window.location.href = `/order-confirmation?orderId=${response.orderId}`;
                } else {
                    window.location.href = `/payment-failed?orderId=${response.orderId}`;
                }
            },
            error: function() {
                window.location.href = `/payment-failed?orderId=${response.orderId}`;
            }
        });
    }

    async function placeOrder() {
        const selectedAddress = document.querySelector('input[name="address"]:checked');
        if (!selectedAddress) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Please select a delivery address'
            });
            return;
        }

        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
        if (!paymentMethod) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Please select a payment method'
            });
            return;
        }

        const products = <%- JSON.stringify(products) %>;
        const subtotal = <%= parseInt(subtotal) %>;
        const finalAmount = document.getElementById('finalAmount').textContent.replace(/[₹,]/g, '').trim();

        const orderData = {
            address: selectedAddress.value,
            products: JSON.stringify(products),
            subtotal: subtotal,
            total: parseFloat(finalAmount),
            paymentMethod: paymentMethod.value,
            orderId: paymentMethod.value === 'onlinePayment' ? '' : selectedAddress.value
        };

        try {
            if (paymentMethod.value === 'onlinePayment') {
                handlePayment(orderData);
            } else {
                const response = await fetch('/checkout/place-order', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(orderData)
                });
                
                const data = await response.json();
                if (data.success) {
                    window.location.href = `/order-confirmation?orderId=${data.orderId}`;
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Error creating order'
                    });
                }
            }
        } catch (error) {
            console.error('Error placing order:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Error placing order. Please try again.'
            });
        }
    }
</script>

<%- include("../../views/partials/user/footer") %>