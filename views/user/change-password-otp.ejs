<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password Verification</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: "Nunito", sans-serif;
            background: linear-gradient(to right, #f9a826, #e94e77);
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0;
        }
        .verification-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 400px;
            width: 100%;
        }
        .verification-card h3 {
            color: #333;
            font-weight: 600;
            margin-bottom: 20px;
        }
        .form-control {
            margin-bottom: 15px;
        }
        .btn-primary {
            background: linear-gradient(to right, #f9a826, #e94e77);
            border: none;
            transition: background 0.3s ease;
            width: 100%;
        }
        .btn-primary:hover {
            background: linear-gradient(to right, #e94e77, #f9a826);
        }
        .btn-secondary {
            width: 100%;
            background: #6c757d;
            border: none;
            margin-top: 10px;
        }
        .btn-secondary:hover {
            background: #5a6268;
        }
        .otp-timer {
            font-weight: bold;
            color: #555;
            margin-top: 10px;
        }
        .timer-circle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(to right, #f9a826, #e94e77);
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 1rem auto;
            font-weight: 600;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="verification-card">
        <h3 class="text-center mb-4">Change Password Verification</h3>
        <form onsubmit="return validateOtpForm()">
            <div class="mb-3">
                <label for="otp" class="form-label">Enter OTP:</label>
                <input type="text" id="otp" name="otp" class="form-control" required maxlength="6" pattern="\d*">
            </div>
            <div class="timer-circle" id="otpTimer">60</div>
            <button type="submit" class="btn btn-primary">Verify OTP</button>
            <button type="button" class="btn btn-secondary mt-2" onclick="resendOtp()">Resend OTP</button>
            <% if (locals.message && message.length > 0) { %>
                <div class="alert alert-danger mt-3">
                    <%= message %>
                </div>
            <% } %>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        let otpTimerInterval;
        let timer = 60;

        function updateTimerColor(percentage) {
            const timerElement = document.getElementById('otpTimer');
            if (percentage > 50) {
                timerElement.style.background = 'linear-gradient(to right, #f9a826, #e94e77)';
            } else if (percentage > 25) {
                timerElement.style.background = 'linear-gradient(to right, #f9a826, #ff4444)';
            } else {
                timerElement.style.background = 'linear-gradient(to right, #ff4444, #cc0000)';
            }
        }

        function startOtpTimer() {
            const timerElement = document.getElementById('otpTimer');
            timer = 60;
            document.getElementById("otp").disabled = false;
            
            otpTimerInterval = setInterval(function() {
                timerElement.textContent = timer;
                updateTimerColor((timer/60)*100);
                
                if (--timer < 0) {
                    clearInterval(otpTimerInterval);
                    timerElement.textContent = "0";
                    timerElement.style.background = '#cc0000';
                    document.getElementById("otp").disabled = true;
                }
            }, 1000);
        }

        function validateOtpForm() {
            const otpInput = document.getElementById('otp').value;
            $.ajax({
                type: 'POST',
                url: '/verify-changepassword-otp',
                data: { otp: otpInput },
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'OTP Verified Successfully',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = response.redirectUrl;
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Invalid OTP',
                            text: response.message
                        });
                    }
                },
                error: function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to verify OTP. Please try again.'
                    });
                }
            });
            return false;
        }

        function resendOtp() {
            clearInterval(otpTimerInterval);
            startOtpTimer();
            
            $.ajax({
                type: 'POST',
                url: '/resend-changepassword-otp',
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Resend OTP Successful',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to resend OTP. Please try again.'
                        });
                    }
                },
                error: function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to resend OTP. Please try again.'
                    });
                }
            });
        }

        // Start timer when page loads
        document.addEventListener('DOMContentLoaded', function() {
            startOtpTimer();
        });
    </script>
</body>
</html>