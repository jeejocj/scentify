<%- include("../../views/partials/user/header") %>
<style>
    .page-header.breadcrumb-wrap {
        background-color: #eee2e9;
        padding: 15px 0;
    }

    .breadcrumb {
        display: flex;
        align-items: center;
        font-family: 'Arial', sans-serif;
        font-size: 16px;
        color: #121311;
    }

    .breadcrumb a {
        color: #007bff;
        text-decoration: none;
        position: relative;
        margin: 0 5px;
    }

    .breadcrumb a:hover {
        color: #0056b3;
    }

    .breadcrumb span {
        margin: 0 5px;
        color: #999;
    }

    .breadcrumb a::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 2px;
        background: #6e6e3a;
        left: 0;
        bottom: -2px;
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }

    .breadcrumb a:hover::after {
        transform: scaleX(1);
    }

    /* Modern Profile Styles */
    .main {
        padding: 40px 0;
        background-color: #f8f9fa;
    }

    .dashboard-menu {
        background: #fff;
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    }

    .dashboard-menu .nav-link {
        color: #2d3436;
        padding: 12px 20px;
        border-radius: 10px;
        margin-bottom: 10px;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: all 0.3s ease;
    }

    .dashboard-menu .nav-link i {
        margin-right: 12px;
        font-size: 18px;
        width: 24px;
        text-align: center;
    }

    .dashboard-menu .nav-link:hover,
    .dashboard-menu .nav-link.active {
        background: #f8f9fa;
        color: #2d3436;
        transform: translateX(5px);
    }

    .dashboard-menu .nav-link.active {
        background: #2d3436;
        color: #fff;
    }

    .card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        margin-bottom: 25px;
        overflow: hidden;
    }

    .card-header {
        background: #2d3436;
        color: white;
        padding: 15px 20px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .card-header h5 {
        color: white;
        margin: 0;
        font-weight: 500;
    }

    .card-body {
        padding: 25px;
    }

    .card-green {
        background: #fff;
    }

    .user-profile-card {
        text-align: center;
        padding: 30px;
    }

    .user-info {
        margin-top: 20px;
    }

    .user-info h5 {
        margin-bottom: 20px;
        font-weight: 600;
        color: #2d3436;
    }

    .user-info p {
        color: #636e72;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .user-info p i {
        color: #2d3436;
        font-size: 16px;
    }

    .wallet-status {
        background: linear-gradient(135deg, #2d3436 0%, #636e72 100%);
        color: #fff;
        padding: 25px;
        border-radius: 15px;
        margin-bottom: 25px;
    }

    .wallet-balance {
        font-size: 32px;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .wallet-label {
        opacity: 0.9;
        font-size: 14px;
    }

    .orders-list {
        margin: -20px;
    }

    .orders-container {
        max-height: 600px;
        overflow-y: auto;
        padding: 20px;
    }

    .order-item {
        background: #fff;
        border: 1px solid #eee;
        border-radius: 12px;
        margin-bottom: 20px;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .order-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .order-header {
        background: #f8f9fa;
        padding: 15px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #eee;
    }

    .order-info {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .order-id {
        font-weight: 600;
        color: #2d3436;
    }

    .order-date {
        font-size: 14px;
        color: #636e72;
    }

    .order-details {
        padding: 20px;
    }

    .order-summary {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .order-amount {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .amount-label {
        color: #636e72;
        font-size: 14px;
    }

    .amount-value {
        font-weight: 600;
        color: #2d3436;
        font-size: 16px;
    }

    .order-payment {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .payment-method {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #636e72;
        font-size: 14px;
    }

    .payment-method i {
        color: #2d3436;
    }

    .payment-status {
        font-size: 13px;
        font-weight: 500;
        padding: 4px 8px;
        border-radius: 4px;
    }

    .payment-status.completed {
        background-color: #d4edda;
        color: #28a745;
    }

    .payment-status.pending {
        background-color: #fff3cd;
        color: #ffc107;
    }

    .payment-status.failed {
        background-color: #f8d7da;
        color: #dc3545;
    }

    .order-actions {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .order-actions .btn {
        padding: 8px 16px;
        font-size: 13px;
    }

    .no-orders {
        text-align: center;
        padding: 40px 20px;
    }

    .no-orders i {
        color: #636e72;
        margin-bottom: 15px;
    }

    .no-orders h6 {
        color: #636e72;
        margin-bottom: 20px;
    }

    @media (max-width: 768px) {
        .order-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .order-summary {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }

        .order-payment {
            flex-direction: column;
            align-items: flex-start;
            gap: 8px;
        }

        .order-actions {
            justify-content: flex-start;
        }

        .order-actions .btn {
            flex: 1;
            text-align: center;
            min-width: 120px;
        }
    }

    .wallet-overview {
        display: flex;
        flex-direction: column;
        gap: 30px;
    }

    .wallet-balance-card {
        background: linear-gradient(135deg, #2d3436 0%, #636e72 100%);
        border-radius: 15px;
        padding: 30px;
        color: white;
    }

    .balance-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 20px;
    }

    .balance-icon {
        background: rgba(255, 255, 255, 0.1);
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .balance-icon i {
        font-size: 24px;
        color: white;
    }

    .balance-details {
        flex-grow: 1;
    }

    .balance-label {
        display: block;
        font-size: 14px;
        opacity: 0.8;
        margin-bottom: 5px;
    }

    .balance-amount {
        font-size: 32px;
        font-weight: 600;
        margin: 0;
    }

    .wallet-transactions {
        background: white;
        border-radius: 15px;
        overflow: hidden;
    }

    .transactions-title {
        padding: 20px;
        margin: 0;
        border-bottom: 1px solid #eee;
        font-weight: 600;
        color: #2d3436;
    }

    .transactions-list {
        max-height: 400px;
        overflow-y: auto;
    }

    .transaction-item {
        display: flex;
        align-items: flex-start;
        padding: 15px 20px;
        border-bottom: 1px solid #f5f5f5;
        transition: background-color 0.3s ease;
    }

    .transaction-item:hover {
        background-color: #f8f9fa;
    }

    .transaction-icon {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
    }

    .transaction-icon.credit {
        background-color: #d4edda;
        color: #28a745;
    }

    .transaction-icon.debit {
        background-color: #f8d7da;
        color: #dc3545;
    }

    .transaction-details {
        flex-grow: 1;
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
    }

    .transaction-info {
        display: flex;
        flex-direction: column;
    }

    .transaction-desc {
        font-weight: 500;
        color: #2d3436;
        margin-bottom: 4px;
    }

    .transaction-id {
        color: #6c757d;
        font-size: 12px;
    }

    .transaction-meta {
        text-align: right;
    }

    .transaction-amount {
        display: block;
        font-weight: 600;
        margin-bottom: 4px;
    }

    .transaction-amount.credit {
        color: #28a745;
    }

    .transaction-amount.debit {
        color: #dc3545;
    }

    .transaction-date {
        font-size: 12px;
        color: #6c757d;
    }

    .no-transactions {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 40px 20px;
        color: #6c757d;
        text-align: center;
    }

    .no-transactions i {
        margin-bottom: 15px;
        opacity: 0.5;
    }

    @media (max-width: 768px) {
        .balance-content {
            flex-direction: column;
            text-align: center;
        }

        .balance-icon {
            margin: 0 auto 15px;
        }

        .transaction-details {
            flex-direction: column;
            gap: 10px;
        }

        .transaction-meta {
            text-align: left;
        }
    }
</style>

<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Account</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/userProfile">Profile</a>
                        <span>Account</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<main class="main">
    <section class="pt-10 pb-10">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 m-auto">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="dashboard-menu">
                                <ul class="nav flex-column" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" aria-controls="dashboard" aria-selected="false">
                                            <i class="fi-rs-settings-sliders mr-10"></i>Dashboard
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="true">
                                            <i class="fi-rs-marker mr-10"></i>Address
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false">
                                            <i class="fi-rs-shopping-bag mr-10"></i>Orders
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="track-orders-tab" data-bs-toggle="tab" href="#track-orders" role="tab" aria-controls="track-orders" aria-selected="false">
                                            <i class="fi-rs-shopping-cart-check mr-10"></i>Wallet
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" href="javascript:void(0);" onclick="confirmLogout()">
                                            <i class="fi-rs-sign-out mr-10"></i>Logout
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="tab-content dashboard-content">
                                <div class="tab-pane fade show active" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
                                    <div class="card card-green">
                                        <div class="card-header">
                                            <h5 class="mb-0">User Profile</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="user-info text-center">
                                                <h5><%=user.name%></h5>
                                                <p><%=user.phone%></p>
                                                <p><%=user.email%></p>
                                                <div class="mt-4">
                                                    <% if (!user.googleId) { %>
                                                     <a href="/change-password" class="btn btn-custom">Change Password</a>
                                                    <% } else { %>
                                                     <button class="btn btn-custom" disabled title="Password change not available for Google sign-in">Change Password</button>
                                                    <% } %>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="address" role="tabpanel" aria-labelledby="address-tab">
                                    <div class="card">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h5 class="mb-0">My Addresses</h5>
                                            <button onclick="window.location.href='/addAddress'" class="btn btn-custom">
                                                <i class="fas fa-plus me-2"></i>Add New Address
                                            </button>
                                        </div>
                                        <div class="card-body">
                                            <% if (addressData && addressData.address && addressData.address.length > 0) { %>
                                                <div class="row g-4">
                                                    <% addressData.address.forEach(addr => { %>
                                                        <div class="col-lg-6">
                                                            <div class="address-card">
                                                                <div class="address-card-body">
                                                                    <div class="address-header">
                                                                        <div>
                                                                            <span class="address-type mb-2">
                                                                                <% if (addr.addressType === 'Home') { %>
                                                                                    <i class="fas fa-home me-1"></i>
                                                                                <% } else if (addr.addressType === 'Work') { %>
                                                                                    <i class="fas fa-briefcase me-1"></i>
                                                                                <% } else { %>
                                                                                    <i class="fas fa-map-marker-alt me-1"></i>
                                                                                <% } %>
                                                                                <%= addr.addressType %>
                                                                            </span>
                                                                            <h6 class="mb-1 mt-2"><%= addr.name %></h6>
                                                                        </div>
                                                                    </div>
                                                                    <div class="address-divider"></div>
                                                                    <div class="address-details">
                                                                        <p class="mb-2"><%= addr.landMark %></p>
                                                                        <p class="mb-2"><%= addr.city %>, <%= addr.state %></p>
                                                                        <p class="mb-2">PIN: <%= addr.pincode %></p>
                                                                        <p class="mb-0">Phone: <%= addr.phone %></p>
                                                                    </div>
                                                                    <div class="address-actions mt-3">
                                                                        <button onclick="editAddress('<%= addr._id %>')" class="btn btn-outline-primary btn-sm">
                                                                            Edit
                                                                        </button>
                                                                        <button onclick="deleteAddress('<%= addr._id %>')" class="btn btn-outline-danger btn-sm">
                                                                            Delete
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    <% }); %>
                                                </div>
                                            <% } else { %>
                                                <div class="text-center py-5">
                                                    <i class="fas fa-home fa-3x mb-3 text-muted"></i>
                                                    <h6 class="text-muted">No addresses found</h6>
                                                    <button onclick="window.location.href='/addAddress'" class="btn btn-custom mt-3">
                                                        <i class="fas fa-plus me-2"></i>Add Your First Address
                                                    </button>
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5 class="mb-0">Your Orders</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="orders-list">
                                                <% if (orders && orders.length > 0) { %>
                                                    <div class="orders-container">
                                                        <% orders.forEach(order => { %>
                                                            <div class="order-item">
                                                                <div class="order-header">
                                                                    <div class="order-info">
                                                                        <div class="order-id">
                                                                            <%= order.orderId %>
                                                                        </div>
                                                                        <div class="order-date">
                                                                            <%= new Date(order.createdOn).toLocaleDateString('en-IN', {
                                                                                year: 'numeric',
                                                                                month: 'short',
                                                                                day: 'numeric'
                                                                            }) %>
                                                                        </div>
                                                                    </div>
                                                                    <div class="order-status">
                                                                        <!-- <span class="badge <%= 
                                                                            order.status === 'Delivered' ? 'bg-success' : 
                                                                            order.status === 'Cancelled' ? 'bg-danger' : 
                                                                            order.status === 'Returned' ? 'bg-secondary' :
                                                                            'bg-warning' %>">
                                                                            <%= order.status %>
                                                                        </span> -->

                                                                        <% if (order.returnRequest && order.returnRequest.status !== 'None') { %>
                                                                            <span class="badge <%= 
                                                                                order.returnRequest.status === 'Approved' ? 'bg-success' : 
                                                                                order.returnRequest.status === 'Rejected' ? 'bg-danger' : 
                                                                                'bg-warning' %>">
                                                                                Return <%= order.returnRequest.status %>
                                                                            </span>
                                                                            <% if (order.returnRequest.status === 'Approved') { %>
                                                                                <div class="mt-2 small text-success">
                                                                                    Refund of ₹<%= order.finalAmount %> has been credited to your wallet
                                                                                </div>
                                                                            <% } %>
                                                                        <% } %>
                                                                    </div>
                                                                </div>
                                                                <div class="order-details">
                                                                    <div class="order-summary">
                                                                        <div class="order-amount">
                                                                            <span class="amount-label">Total:</span>
                                                                            <span class="amount-value">₹<%= order.finalAmount %></span>
                                                                        </div>
                                                                        <div class="order-payment">
                                                                            <span class="payment-method">
                                                                                <i class="fas <%= order.paymentMethod === 'Online Payment' ? 'fa-credit-card' : 'fa-money-bill' %>"></i>
                                                                                <%= order.paymentMethod %>
                                                                            </span>
                                                                            <span class="payment-status <%= order.paymentStatus.toLowerCase() %>">
                                                                                <%= order.paymentStatus %>
                                                                            </span>
                                                                        </div>
                                                                    </div>
                                                                    <div class="order-actions">
                                                                        <button type="button" 
                                                                            class="btn btn-outline-primary btn-sm view-order-btn" 
                                                                            data-order-id="<%= order._id %>">
                                                                            View Details
                                                                        </button>
                                                                        
                                                                        <% if(order.status === 'Pending' && order.paymentStatus === 'Completed') { %>
                                                                            <button 
                                                                                type="button" 
                                                                                class="btn btn-outline-danger btn-sm cancel-order-btn" 
                                                                                data-order-id="<%= order._id %>">
                                                                                Cancel Order
                                                                            </button>
                                                                        <% } %>
                                                                        
                                                                        <% if(order.status === 'Delivered' && (!order.returnRequest || order.returnRequest.status === 'None')) { %>
                                                                            <button 
                                                                                type="button" 
                                                                                class="btn btn-outline-warning btn-sm return-order-btn" 
                                                                                onclick="requestReturn('<%= order._id %>')">
                                                                                Request Return
                                                                            </button>
                                                                        <% } %>
                                                                        
                                                                        <% if (order.paymentStatus === 'Pending' && order.paymentMethod === 'Online Payment') { %>
                                                                            <button 
                                                                                class="btn btn-outline-info btn-sm" 
                                                                                onclick="retryPayment('<%= order._id %>')">
                                                                                Retry Payment
                                                                            </button>
                                                                        <% } %>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        <% }); %>
                                                    </div>
                                                <% } else { %>
                                                    <div class="no-orders">
                                                        <i class="fas fa-shopping-bag fa-3x text-muted mb-3"></i>
                                                        <h6 class="text-muted">No orders found</h6>
                                                        <a href="/shop" class="btn btn-custom mt-3">Start Shopping</a>
                                                    </div>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="track-orders" role="tabpanel" aria-labelledby="track-orders-tab">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5 class="mb-0">Wallet</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="wallet-overview">
                                                <div class="wallet-balance-card">
                                                    <div class="balance-content">
                                                        <div class="balance-icon">
                                                            <i class="fas fa-wallet"></i>
                                                        </div>
                                                        <div class="balance-details">
                                                            <span class="balance-label">Available Balance</span>
                                                            <h2 class="balance-amount">₹<%= user.wallet || 0 %></h2>
                                                        </div>
                                                        <button type="button" class="btn btn-custom" onclick="addMoneyToWallet()">
                                                            <i class="fas fa-plus-circle me-2"></i>Add Money
                                                        </button>
                                                    </div>
                                                </div>

                                                <div class="wallet-transactions">
                                                    <h6 class="transactions-title">
                                                        <style>
                                                            .transactions-title {
                                                                padding: 20px;
                                                                margin: 0;
                                                                border-bottom: 1px solid #eee;
                                                                font-weight: 600;
                                                                color: #2d3436;
                                                            }
                                                        </style>
                                                    </h6>
                                                    <div class="transactions-list">
                                                        <% if (Array.isArray(user.walletHistory) && user.walletHistory.length > 0) { %>
                                                            <% user.walletHistory.sort((a, b) => new Date(b.date) - new Date(a.date)).forEach(transaction => { %>
                                                                <div class="transaction-item">
                                                                    <div class="transaction-icon <%= transaction.type === 'credit' ? 'credit' : 'debit' %>">
                                                                        <i class="fas <%= transaction.type === 'credit' ? 'fa-arrow-down' : 'fa-arrow-up' %>"></i>
                                                                    </div>
                                                                    <div class="transaction-details">
                                                                        <div class="transaction-info">
                                                                            <span class="transaction-desc"><%= transaction.description %></span>
                                                                            <% if (transaction.description.toLowerCase().includes('refund') && transaction.orderId && transaction.orderId.length > 0) { %>
                                                                                <span class="order-id">(Order #<%= transaction.orderId[0] %>)</span>
                                                                            <% } else if (transaction.description.toLowerCase().includes('recharge') && transaction.paymentId) { %>
                                                                                <span class="payment-id">(Payment #<%= transaction.paymentId %>)</span>
                                                                            <% } %>
                                                                            <span class="transaction-date"><%= new Date(transaction.date).toLocaleDateString('en-IN', { 
                                                                                year: 'numeric', 
                                                                                month: 'short', 
                                                                                day: 'numeric'
                                                                            }) %></span>
                                                                        </div>
                                                                        <div class="transaction-meta">
                                                                            <span class="transaction-amount <%= transaction.type === 'credit' ? 'credit' : 'debit' %>">
                                                                                <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toLocaleString('en-IN') %>
                                                                            </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            <% }); %>
                                                        <% } else { %>
                                                            <div class="no-transactions">
                                                                <i class="fas fa-receipt fa-3x"></i>
                                                                <p>No transactions yet</p>
                                                            </div>
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<!-- Order Details Modal
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="order-info mb-4">
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>Order ID:</strong> <span id="modalOrderId"></span></p>
                            <p><strong>Order Date:</strong> <span id="modalOrderDate"></span></p>
                            <p><strong>Status:</strong> <span id="modalOrderStatus" class="badge"></span></p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <a href="#" id="downloadInvoiceBtn" class="btn btn-primary" target="_blank">
                                <i class="fas fa-download"></i> Download Invoice
                            </a>
                        </div>
                    </div>
                </div>
                <div class="row mb-4">
                  <div class="col-md-6">
                    <p>
                      <strong>Payment Method:</strong> 
                      <span id="modalPaymentMethodIcon"></span>
                      <span id="modalPaymentMethod"></span>
                    </p>
                    <p><strong>Total Amount:</strong> ₹<span id="modalOrderTotal"></span></p>
                    <p id="modalOrderDiscount" style="display: none;">
                      <strong>Discount Applied:</strong> ₹<span id="modalDiscountAmount"></span>
                    </p>
                  </div>
                  <div class="col-md-6">
                    <h6>Shipping Address</h6>
                    <div id="modalShippingAddress"></div>
                  </div>
                </div>
                <div class="table-responsive">
                  <table class="table">
                    <thead>
                      <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                      </tr>
                    </thead>
                    <tbody id="modalOrderItems">
                    </tbody>
                    <tfoot>
                      <tr>
                        <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
                        <td>₹<span id="modalSubtotal"></span></td>
                      </tr>
                      <tr id="modalDiscountRow" style="display: none;">
                        <td colspan="3" class="text-end"><strong>Discount:</strong></td>
                        <td class="text-success">-₹<span id="modalDiscountTotal"></span></td>
                      </tr>
                      <tr>
                        <td colspan="3" class="text-end"><strong>Total:</strong></td>
                        <td><strong>₹<span id="modalFinalTotal"></span></strong></td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
            </div>
        </div>
    </div>
</div> -->
<!-- Order Details Modal
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="order-info mb-4">
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>Order ID:</strong> <span id="modalOrderId"></span></p>
                            <p><strong>Order Date:</strong> <span id="modalOrderDate"></span></p>
                            <p><strong>Status:</strong> <span id="modalOrderStatus" class="badge"></span></p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <a href="#" id="downloadInvoiceBtn" class="btn btn-primary" target="_blank">
                                <i class="fas fa-download"></i> Download Invoice
                            </a>
                        </div>
                    </div>
                </div>
                <div class="row mb-4">
                  <div class="col-md-6">
                    <p>
                      <strong>Payment Method:</strong> 
                      <span id="modalPaymentMethodIcon"></span>
                      <span id="modalPaymentMethod"></span>
                    </p>
                    <p><strong>Total Amount:</strong> ₹<span id="modalOrderTotal"></span></p>
                    <p id="modalOrderDiscount" style="display: none;">
                      <strong>Discount Applied:</strong> ₹<span id="modalDiscountAmount"></span>
                    </p>
                  </div>
                  <div class="col-md-6">
                    <h6>Shipping Address</h6>
                    <div id="modalShippingAddress"></div>
                  </div>
                </div>
                <div class="table-responsive">
                  <table class="table">
                    <thead>
                      <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                      </tr>
                    </thead>
                    <tbody id="modalOrderItems">
                    </tbody>
                    <tfoot>
                      <tr>
                        <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
                        <td>₹<span id="modalSubtotal"></span></td>
                      </tr>
                      <tr id="modalDiscountRow" style="display: none;">
                        <td colspan="3" class="text-end"><strong>Discount:</strong></td>
                        <td class="text-success">-₹<span id="modalDiscountTotal"></span></td>
                      </tr>
                      <tr>
                        <td colspan="3" class="text-end"><strong>Total:</strong></td>
                        <td><strong>₹<span id="modalFinalTotal"></span></strong></td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
            </div>
        </div>
    </div>
</div> -->
<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header bg-light py-2">
              <h5 class="modal-title" id="orderDetailsModalLabel">
                  <i class="fas fa-shopping-bag me-2"></i>Order Details
              </h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body p-3">
              <div class="order-info mb-3 p-2 bg-light rounded">
                  <div class="row align-items-center">
                      <div class="col-8">
                          <div class="d-flex align-items-center mb-1">
                              <i class="fas fa-hashtag text-primary me-2"></i>
                              <small><strong>Order ID:</strong> <span id="modalOrderId"></span></small>
                          </div>
                          <div class="d-flex align-items-center mb-1">
                              <i class="far fa-calendar-alt text-primary me-2"></i>
                              <small><strong>Order Date:</strong> <span id="modalOrderDate"></span></small>
                          </div>
                          <div class="d-flex align-items-center">
                              <i class="fas fa-info-circle text-primary me-2"></i>
                              <small><strong>Status:</strong> <span id="modalOrderStatus" class="badge ms-1"></span></small>
                          </div>
                      </div>
                      <div class="col-4 text-end">
                          <a href="#" id="downloadInvoiceBtn" class="btn btn-sm btn-primary" target="_blank">
                              <i class="fas fa-download me-1"></i>Invoice
                          </a>
                      </div>
                  </div>
              </div>
              <div class="row mb-3">
                  <div class="col-md-6">
                      <div class="payment-details p-2 bg-light rounded">
                          <h6 class="border-bottom pb-2 mb-2 fs-7">Payment Info</h6>
                          <div class="d-flex align-items-center mb-1">
                              <i class="fas fa-credit-card text-primary me-2"></i>
                              <small class="mb-0">
                                  <strong>Method:</strong> 
                                  <span id="modalPaymentMethodIcon"></span>
                                  <span id="modalPaymentMethod"></span>
                              </small>
                          </div>
                          <div class="d-flex align-items-center mb-1">
                              <i class="fas fa-rupee-sign text-primary me-2"></i>
                              <small class="mb-0"><strong>Amount:</strong> ₹<span id="modalOrderTotal"></span></small>
                          </div>
                          <div class="d-flex align-items-center" id="modalOrderDiscount" style="display: none;">
                              <i class="fas fa-tags text-primary me-2"></i>
                              <small class="mb-0"><strong>Discount:</strong> ₹<span id="modalDiscountAmount"></span></small>
                          </div>
                      </div>
                  </div>
                  <div class="col-md-6">
                      <div class="shipping-details p-2 bg-light rounded">
                          <h6 class="border-bottom pb-2 mb-2 fs-7">
                              <i class="fas fa-shipping-fast me-2"></i>Shipping Info
                          </h6>
                          <div id="modalShippingAddress" class="small"></div>
                      </div>
                  </div>
              </div>
              <div class="table-responsive">
                  <table class="table table-sm table-hover">
                      <thead class="table-light">
                          <tr>
                              <th class="py-2">Product</th>
                              <th class="py-2">Qty</th>
                              <th class="py-2">Price</th>
                              <th class="py-2">Total</th>
                          </tr>
                      </thead>
                      <tbody id="modalOrderItems">
                      </tbody>
                      <tfoot class="table-light">
                          <tr>
                              <td colspan="3" class="text-end py-2"><small><strong>Subtotal:</strong></small></td>
                              <td class="py-2"><small>₹<span id="modalSubtotal"></span></small></td>
                          </tr>
                          <tr id="modalDiscountRow" style="display: none;">
                              <td colspan="3" class="text-end py-2"><small><strong>Discount:</strong></small></td>
                              <td class="text-success py-2"><small>-₹<span id="modalDiscountTotal"></span></small></td>
                          </tr>
                          <tr>
                              <td colspan="3" class="text-end py-2"><strong>Total:</strong></td>
                              <td class="py-2"><strong>₹<span id="modalFinalTotal"></span></strong></td>
                          </tr>
                      </tfoot>
                  </table>
              </div>
          </div>
      </div>
  </div>
</div>

<style>
.modal-content {
    border: none;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    border-radius: 15px;
}

.modal-header {
    background: linear-gradient(to right, #f9a826, #e94e77);
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
    padding: 1rem 1.5rem;
}

.modal-header .modal-title {
    color: white;
    font-weight: 500;
}

.modal-header .btn-close {
    color: white;
    opacity: 1;
}

.modal-body {
    padding: 1.5rem;
}

.order-info {
    background-color: #f8f9fa;
    border-radius: 10px;
    padding: 1.25rem;
}

.badge {
    padding: 0.4em 0.8em;
    font-weight: 500;
    font-size: 0.75rem;
    border-radius: 20px;
}

.badge-pending {
    background-color: #f1c40f;
    color: #2d3436;
}

.badge-delivered {
    background-color: #27ae60;
    color: white;
}

.badge-cancelled {
    background-color: #e74c3c;
    color: white;
}

.badge-shipped {
    background-color: #3498db;
    color: white;
}

.table > :not(caption) > * > * {
    padding: 0.75rem;
    vertical-align: middle;
}

.table-hover tbody tr:hover {
    background-color: rgba(233, 78, 119, 0.05);
}

.product-cell {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.product-image {
    width: 60px;
    height: 60px;
    border-radius: 8px;
    overflow: hidden;
}

.product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-info {
    flex: 1;
}

.product-name {
    margin-bottom: 0.25rem;
    font-size: 0.9rem;
    font-weight: 500;
}

.offer-details {
    font-size: 0.8rem;
}

.text-primary {
    color: #e94e77 !important;
}

.btn-primary {
    background: linear-gradient(to right, #f9a826, #e94e77);
    border: none;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    border-radius: 5px;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background: linear-gradient(to right, #e94e77, #f9a826);
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.payment-details, .shipping-details {
    height: 100%;
    background-color: #f8f9fa;
    border-radius: 10px;
    padding: 1rem;
}

.table-light {
    background-color: #f8f9fa;
}

.fs-7 {
    font-size: 0.875rem;
}

@media (max-width: 768px) {
    .modal-dialog {
        margin: 1rem;
    }
    
    .product-cell {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }
    
    .product-image {
        width: 50px;
        height: 50px;
    }
}
</style>

<!-- Return Modal -->
<div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnModalLabel">Request Return</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="returnReason" class="form-label">Reason for Return</label>
                    <textarea class="form-control" id="returnReason" rows="3" required 
                        placeholder="Please explain why you want to return this order"></textarea>
                    <div class="invalid-feedback">
                        Please provide a reason for return
                    </div>
                </div>
                <input type="hidden" id="returnOrderId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitReturnRequest()">Submit Request</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    // Address Functions
    function editAddress(addressId) {
        Swal.fire({
            title: 'Edit Address',
            text: 'Do you want to edit this address?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, edit it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/editAddress?id=${addressId}`;
            }
        });
    }

    function deleteAddress(addressId) {
        Swal.fire({
            title: 'Delete Address?',
            text: 'This action cannot be undone!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc3545',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, keep it'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/deleteAddress?id=${addressId}`;
            }
        });
    }

    async function addMoneyToWallet() {
        try {
            const { value: amount } = await Swal.fire({
                title: 'Enter amount to add',
                input: 'number',
                inputLabel: 'Amount (₹)',
                inputPlaceholder: 'Enter amount',
                inputAttributes: {
                    min: '1',
                    step: '1'
                },
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value || value < 1) {
                        return 'Please enter a valid amount greater than 0'
                    }
                }
            });

            if (amount) {
                // Create Razorpay order
                const response = await fetch('/wallet/recharge', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ amount: amount })
                });

                const data = await response.json();

                if (!data.success) {
                    throw new Error(data.message || 'Error creating order');
                }

                // Configure Razorpay options
                const options = {
                    key: data.key_id,
                    amount: data.order.amount,
                    currency: data.order.currency,
                    name: 'Scentify',
                    description: 'Wallet Recharge',
                    order_id: data.order.id,
                    handler: async function (response) {
                        try {
                            // Verify payment
                            const verifyResponse = await fetch('/wallet/verify', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature,
                                    amount: amount
                                })
                            });

                            const verifyData = await verifyResponse.json();

                            if (verifyData.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success!',
                                    text: 'Money added to wallet successfully!',
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    // Update wallet balance display
                                    const walletBalanceElement = document.getElementById('walletBalance');
                                    if (walletBalanceElement) {
                                        walletBalanceElement.textContent = `₹${verifyData.newBalance}`;
                                    }
                                });
                            } else {
                                throw new Error(verifyData.message || 'Payment verification failed');
                            }
                        } catch (error) {
                            console.error('Payment verification error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: error.message || 'Error verifying payment'
                            });
                        }
                    },
                    prefill: {
                        name: '<%= user.name %>',
                        email: '<%= user.email %>',
                    },
                    theme: {
                        color: "#3399cc"
                    }
                };

                // Create Razorpay instance and open payment modal
                const rzp = new Razorpay(options);
                rzp.open();
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message || 'Something went wrong'
            });
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // View Order Button Click Handler
        const viewButtons = document.querySelectorAll('.view-order-btn');
        viewButtons.forEach(button => {
            button.addEventListener('click', function() {
                const orderId = this.getAttribute('data-order-id');
                fetchOrderDetails(orderId);
            });
        });

        // Function to fetch order details
        function fetchOrderDetails(orderId) {
            fetch(`/orders/get-details/${orderId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        populateModal(data.order);
                        new bootstrap.Modal(document.getElementById('orderDetailsModal')).show();
                    } else {
                        Swal.fire('Error', data.message || 'Failed to fetch order details', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Something went wrong', 'error');
                });
        }

        // Function to populate modal with order details
        function populateModal(order) {
            // Order Information
            const orderId = order.orderId;
            document.getElementById('modalOrderId').textContent = orderId;
            document.getElementById('modalOrderDate').textContent = new Date(order.createdOn).toLocaleDateString();
            document.getElementById('modalOrderStatus').textContent = order.status;

            // Update download invoice button
            const downloadBtn = document.getElementById('downloadInvoiceBtn');
            downloadBtn.href = `/orders/download-invoice/${orderId}`;
            
            // Disable download button for cancelled or returned orders
            if (order.status === 'Cancelled' || order.status === 'Returned') {
                downloadBtn.classList.add('disabled');
                downloadBtn.classList.remove('btn-primary');
                downloadBtn.classList.add('btn-secondary');
                downloadBtn.setAttribute('title', 'Invoice not available for cancelled or returned orders');
            } else {
                downloadBtn.classList.remove('disabled');
                downloadBtn.classList.add('btn-primary');
                downloadBtn.classList.remove('btn-secondary');
                downloadBtn.removeAttribute('title');
            }

            // Set payment method with icon
            const paymentMethodIcon = document.getElementById('modalPaymentMethodIcon');
            const paymentMethod = order.paymentMethod.toLowerCase();
            let icon = '';
            
            if (paymentMethod.includes('cod') || paymentMethod.includes('cash')) {
                icon = '<i class="fas fa-money-bill-wave text-success me-2"></i>';
            } else if (paymentMethod.includes('online') || paymentMethod.includes('razorpay')) {
                icon = '<i class="fas fa-credit-card text-primary me-2"></i>';
            } else if (paymentMethod.includes('wallet')) {
                icon = '<i class="fas fa-wallet text-info me-2"></i>';
            } else {
                icon = '<i class="fas fa-question-circle text-secondary me-2"></i>';
            }
            
            paymentMethodIcon.innerHTML = icon;
            document.getElementById('modalPaymentMethod').textContent = order.paymentMethod;
            
            document.getElementById('modalOrderTotal').textContent = order.finalAmount.toLocaleString();

            // Discount Information
            if (order.discount > 0) {
                document.getElementById('modalOrderDiscount').style.display = 'block';
                document.getElementById('modalDiscountAmount').textContent = order.discount.toLocaleString();
                document.getElementById('modalDiscountRow').style.display = 'table-row';
                document.getElementById('modalDiscountTotal').textContent = order.discount.toLocaleString();
            } else {
                document.getElementById('modalOrderDiscount').style.display = 'none';
                document.getElementById('modalDiscountRow').style.display = 'none';
            }

            // Shipping Address
            const addressHtml = order.address ? `
                <p><strong>${order.address.name}</strong></p>
                <p>${order.address.landMark}</p>
                <p>${order.address.city}, ${order.address.state} ${order.address.pincode}</p>
                <p><strong>Phone:</strong> ${order.address.phone}</p>
            ` : '<p>No address information available</p>';
            document.getElementById('modalShippingAddress').innerHTML = addressHtml;

            // Order Items
            const itemsHtml = order.orderedItems.map(item => `
                <tr>
                    <td>
                        <div class="product-cell">
                            <div class="product-image">
                                <img src="/uploads/product-images/${item.product.productImage[0]}" 
                                     alt="${item.product.productName}" 
                                     class="img-fluid" 
                                     style="max-width: 60px;">
                            </div>
                            <div class="product-info">
                                <h6 class="product-name">${item.product.productName}</h6>
                                ${item.discountPercentage > 0 ? 
                                    `<div class="offer-details">
                                        <small class="text-success">
                                            ${item.discountPercentage}% OFF 
                                            (${item.offerType === 'category' ? 'Category Offer' : 
                                               item.offerType === 'product' ? 'Product Offer' : 
                                               item.offerType === 'sale' ? 'Sale Price' : ''})
                                        </small>
                                    </div>` : ''}
                            </div>
                        </div>
                    </td>
                    <td>${item.quantity}</td>
                    <td>
                        ${item.discountPercentage > 0 ? 
                            `<span class="text-muted text-decoration-line-through">₹${item.regularPrice.toLocaleString()}</span><br>` : ''}
                        <span class="text-primary">₹${item.finalPrice.toLocaleString()}</span>
                    </td>
                    <td>₹${item.totalItemPrice.toLocaleString()}</td>
                </tr>
            `).join('');
            document.getElementById('modalOrderItems').innerHTML = itemsHtml;

            // Totals
            document.getElementById('modalSubtotal').textContent = order.subtotal.toLocaleString();
            document.getElementById('modalFinalTotal').textContent = order.finalAmount.toLocaleString();
        }

        // Add event listener for cancel buttons
        const cancelButtons = document.querySelectorAll('.cancel-order-btn');
        cancelButtons.forEach(button => {
            button.addEventListener('click', function() {
                const orderId = this.getAttribute('data-order-id');
                cancelOrder(orderId);
            });
        });
    });

    async function retryPayment(orderId) {
        try {
            const response = await fetch('/retry-payment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId })
            });

            const data = await response.json();
            if (data.success) {
                var options = {
                    key: data.key_id,
                    amount: data.amount,
                    currency: data.currency,
                    name: data.name,
                    description: data.description,
                    order_id: data.order_id,
                    prefill: data.prefill,
                    handler: function(payment) {
                        verifyRetryPayment(payment, orderId);
                    },
                    modal: {
                        ondismiss: function() {
                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Cancelled',
                                text: 'You can retry the payment from your orders page'
                            });
                        }
                    },
                    theme: {
                        color: "#3399cc"
                    }
                };
                var rzp = new Razorpay(options);
                rzp.on('payment.failed', function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'You can retry the payment from your orders page'
                    });
                });
                rzp.open();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to initiate payment retry'
                });
            }
        } catch (error) {
            console.error('Error retrying payment:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to process payment retry'
            });
        }
    }

    function verifyRetryPayment(payment, orderId) {
        
        const verificationData = {
            razorpay_payment_id: payment.razorpay_payment_id,
            razorpay_order_id: payment.razorpay_order_id,
            razorpay_signature: payment.razorpay_signature,
            orderId: orderId
        };
        
        $.ajax({
            url: '/checkout/verify-payment',
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            data: JSON.stringify(verificationData),
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Payment Successful',
                        text: 'Your payment has been completed successfully',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    console.error('Payment verification failed:', response.message);
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: response.message || 'Failed to verify payment. Please contact support if amount is deducted.',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload();
                    });
                }
            },
            error: function(xhr) {
                console.error('Payment verification error:', xhr.responseText);
                let errorMessage = 'Failed to verify payment';
                try {
                    const response = JSON.parse(xhr.responseText);
                    errorMessage = response.message || errorMessage;
                } catch (e) {
                    console.error('Error parsing error response:', e);
                }
                
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errorMessage + ' Please contact support if amount is deducted.',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.reload();
                });
            }
        });
    }

    function cancelOrder(orderId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, cancel it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/orders/cancel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId: orderId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        let message = data.message;
                        if (data.refundAmount) {
                            message += `. ₹${data.refundAmount} has been refunded to your wallet. New wallet balance: ₹${data.newWalletBalance}`;
                            // Update wallet balance display if it exists
                            const walletBalanceElement = document.getElementById('walletBalance');
                            if (walletBalanceElement) {
                                walletBalanceElement.textContent = `₹${data.newWalletBalance}`;
                            }
                        }
                        Swal.fire({
                            title: 'Cancelled!',
                            text: message,
                            icon: 'success',
                            showConfirmButton: false,
                            timer: 2500
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            data.message,
                            'error'
                        );
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire(
                        'Error!',
                        'Failed to cancel order',
                        'error'
                    );
                });
            }
        });
    }

    function requestReturn(orderId) {
        document.getElementById('returnOrderId').value = orderId;
        document.getElementById('returnReason').value = '';
        const returnModal = new bootstrap.Modal(document.getElementById('returnModal'));
        returnModal.show();
    }

    async function submitReturnRequest() {
        const orderId = document.getElementById('returnOrderId').value;
        const reason = document.getElementById('returnReason').value.trim();
        const returnReason = document.getElementById('returnReason');

        // Reset validation
        returnReason.classList.remove('is-invalid');

        if (!reason) {
            returnReason.classList.add('is-invalid');
            return;
        }

        try {
            const response = await fetch('/request-return', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId,
                    reason
                })
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Return request submitted successfully',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('returnModal'));
                    modal.hide();
                    window.location.reload();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to submit return request'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong. Please try again.'
            });
        }
    }

    function confirmLogout() {
        Swal.fire({
            title: 'Are you sure?',
            text: "You will be logged out of your account",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#2d3436',
            cancelButtonColor: '#636e72',
            confirmButtonText: 'Yes, logout',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/logout';
            }
        });
    }
</script>

<style>
.order-card {
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.order-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.order-header {
    padding: 15px 20px;
    background: #f8f9fa;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #eee;
}

.order-info {
    display: flex;
    align-items: center;
    gap: 15px;
}

.order-id {
    font-weight: 600;
    color: #2d3436;
}

.order-date {
    color: #636e72;
    font-size: 14px;
}

.status-badge {
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
}

.status-pending {
    background-color: #ffeaa7;
    color: #fdcb6e;
}

.status-delivered {
    background-color: #55efc4;
    color: #00b894;
}

.status-cancelled {
    background-color: #ff7675;
    color: #d63031;
}

.status-shipped {
    background-color: #74b9ff;
    color: #0984e3;
}

.order-body {
    padding: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.order-amount {
    display: flex;
    align-items: center;
    gap: 10px;
}

.amount-label {
    color: #636e72;
    font-size: 14px;
}

.amount-value {
    font-weight: 600;
    color: #2d3436;
    font-size: 16px;
}

.order-actions {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
}

.order-actions .btn {
    padding: 8px 16px;
    font-size: 13px;
    border-radius: 6px;
    transition: all 0.3s ease;
}

.order-actions .btn:hover {
    transform: translateY(-1px);
}

.btn-outline-primary {
    color: #2d3436;
    border-color: #2d3436;
}

.btn-outline-primary:hover {
    background: #2d3436;
    color: #fff;
}

.btn-outline-danger {
    color: #d63031;
    border-color: #d63031;
}

.btn-outline-danger:hover {
    background: #d63031;
    color: #fff;
}

.btn-outline-warning {
    color: #fdcb6e;
    border-color: #fdcb6e;
}

.btn-outline-warning:hover {
    background: #fdcb6e;
    color: #fff;
}

.btn-outline-info {
    color: #0984e3;
    border-color: #0984e3;
}

.btn-outline-info:hover {
    background: #0984e3;
    color: #fff;
}

.address-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px solid #eee;
}

.address-actions .btn {
    min-width: 80px;
    padding: 8px 16px;
}

.btn-custom {
    background: #2d3436;
    color: #fff;
    padding: 8px 20px;
    border-radius: 8px;
    transition: all 0.3s ease;
    border: none;
}

.btn-custom:hover {
    background: #1e2528;
    color: #fff;
    transform: translateY(-2px);
}

@media (max-width: 768px) {
    .address-actions {
        flex-direction: row;
        justify-content: flex-end;
    }
    
    .address-actions .btn {
        flex: 0 1 auto;
    }
}

@media (max-width: 768px) {
    .order-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .order-body {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }
    
    .order-actions {
        width: 100%;
        flex-wrap: wrap;
    }
    
    .order-actions .btn {
        flex: 1;
        text-align: center;
        min-width: 120px;
    }
}

.wallet-overview {
    display: flex;
    flex-direction: column;
    gap: 30px;
}

.wallet-balance-card {
    background: linear-gradient(135deg, #2d3436 0%, #636e72 100%);
    border-radius: 15px;
    padding: 30px;
    color: white;
}

.balance-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 20px;
}

.balance-icon {
    background: rgba(255, 255, 255, 0.1);
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.balance-icon i {
    font-size: 24px;
    color: white;
}

.balance-details {
    flex-grow: 1;
}

.balance-label {
    display: block;
    font-size: 14px;
    opacity: 0.8;
    margin-bottom: 5px;
}

.balance-amount {
    font-size: 32px;
    font-weight: 600;
    margin: 0;
}

.wallet-transactions {
    background: white;
    border-radius: 15px;
    overflow: hidden;
}

.transactions-title {
    padding: 20px;
    margin: 0;
    border-bottom: 1px solid #eee;
    font-weight: 600;
    color: #2d3436;
}

.transactions-list {
    max-height: 400px;
    overflow-y: auto;
}

.transaction-item {
    display: flex;
    align-items: flex-start;
    padding: 15px 20px;
    border-bottom: 1px solid #f5f5f5;
    transition: background-color 0.3s ease;
}

.transaction-item:hover {
    background-color: #f8f9fa;
}

.transaction-icon {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 15px;
}

.transaction-icon.credit {
    background-color: #d4edda;
    color: #28a745;
}

.transaction-icon.debit {
    background-color: #f8d7da;
    color: #dc3545;
}

.transaction-details {
    flex-grow: 1;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
}

.transaction-info {
    display: flex;
    flex-direction: column;
}

.transaction-desc {
    font-weight: 500;
    color: #2d3436;
    margin-bottom: 4px;
}

.transaction-id {
    color: #6c757d;
    font-size: 12px;
}

.transaction-meta {
    text-align: right;
}

.transaction-amount {
    display: block;
    font-weight: 600;
    margin-bottom: 4px;
}

.transaction-amount.credit {
    color: #28a745;
}

.transaction-amount.debit {
    color: #dc3545;
}

.transaction-date {
    font-size: 12px;
    color: #6c757d;
}

.no-transactions {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 40px 20px;
    color: #6c757d;
    text-align: center;
}

.no-transactions i {
    margin-bottom: 15px;
    opacity: 0.5;
}

@media (max-width: 768px) {
    .balance-content {
        flex-direction: column;
        text-align: center;
    }

    .balance-icon {
        margin: 0 auto 15px;
    }

    .transaction-details {
        flex-direction: column;
        gap: 10px;
    }

    .transaction-meta {
        text-align: left;
    }
}
</style>


<%- include("../../views/partials/user/footer") %>
